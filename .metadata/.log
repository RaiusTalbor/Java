!SESSION 2020-12-22 16:59:04.862 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

This is a continuation of log file D:\Meine Programme\.metadata\.bak_3.log
Created Time: 2020-12-22 18:01:55.075

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:01:55.075
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:01:55.076
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:01:55.088
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:01:55.089
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:01:55.090
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:01.414
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:01.415
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:01.415
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:02.356
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:02.357
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:02.357
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:02.362
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui 4 0 2020-12-22 18:02:02.363
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:02.376
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:02.377
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:02.378
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:04.298
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 18:02:04.299
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 18:02:04.300
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:05.498
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:05.499
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:05.500
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:18.925
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:18.926
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:18.926
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:20.277
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:20.278
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:20.279
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:20.355
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:20.356
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:20.356
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:23.759
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:23.760
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:23.760
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:25.913
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:25.914
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:25.914
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:28.313
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3;) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 18:02:28.314
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 18:02:28.314
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:28.319
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3;) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:28.320
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:28.320
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:29.055
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3;) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:29.056
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:29.057
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:31.916
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3;) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:31.916
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:31.917
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:31.945
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3;) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:31.946
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:31.946
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:32.821
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 18:02:32.822
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 18:02:32.822
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:32.919
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:32.921
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:32.921
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:36.770
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:36.771
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:36.771
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:38.864
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:38.865
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:38.865
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:39.187
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:39.187
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:39.188
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:40.832
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 18:02:40.833
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 18:02:40.833
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:40.839
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:40.840
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:40.840
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:42.800
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:42.801
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:42.802
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:44.372
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:44.373
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:44.373
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:45.841
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 18:02:45.842
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 18:02:45.843
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:45.851
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:45.853
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:45.853
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:49.226
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:49.227
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:49.227
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:50.221
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:50.222
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:50.222
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:51.207
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:51.208
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:51.208
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:02:51.608
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else {
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3) {
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3) {
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:02:51.609
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:02:51.609
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2020-12-22 18:11:34.592 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 4 567 2020-12-22 18:11:37.312
!MESSAGE Workspace restored, but some problems occurred.
!SUBENTRY 1 org.eclipse.core.resources 4 567 2020-12-22 18:11:37.312
!MESSAGE Could not read metadata for 'Automobilbewertungen BL'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException(/Automobilbewertungen BL)[567]: java.lang.Exception: The project description file (.project) for 'Automobilbewertungen BL' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:888)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:868)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:724)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1555)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2452)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2210)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:489)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:814)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:806)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:763)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1011)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:365)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:506)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:572)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:346)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:398)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:473)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:171)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)
!SUBENTRY 2 org.eclipse.core.resources 4 567 2020-12-22 18:11:37.314
!MESSAGE The project description file (.project) for 'Automobilbewertungen BL' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
!STACK 0
java.lang.Exception: The project description file (.project) for 'Automobilbewertungen BL' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:888)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:868)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:724)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1555)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2452)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2210)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:489)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:814)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$2.run(BundleContextImpl.java:1)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:554)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:806)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:763)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1011)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:365)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:506)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:572)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:346)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:398)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:473)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:171)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jface 2 0 2020-12-22 18:11:40.477
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-12-22 18:11:40.477
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6cb194f5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@74b7497b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-12-22 18:11:49.057
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\rouve'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.core.jobs 4 2 2020-12-22 18:11:53.271
!MESSAGE An internal error occurred during: "Deferred Early Start".
!STACK 0
java.lang.NullPointerException: Cannot invoke "org.eclipse.equinox.log.ExtendedLogReaderService.addLogListener(org.osgi.service.log.LogListener, org.eclipse.equinox.log.LogFilter)" because "logReader" is null
	at org.eclipse.core.internal.runtime.InternalPlatform.getLog(InternalPlatform.java:365)
	at org.eclipse.core.runtime.Plugin.getLog(Plugin.java:237)
	at org.eclipse.oomph.util.OomphPlugin.getLog(OomphPlugin.java:221)
	at org.eclipse.oomph.util.OomphPlugin.log(OomphPlugin.java:236)
	at org.eclipse.oomph.util.OomphPlugin.log(OomphPlugin.java:247)
	at org.eclipse.oomph.internal.ui.EarlyStart.run(EarlyStart.java:122)
	at org.eclipse.oomph.internal.ui.EarlyStart$1.run(EarlyStart.java:97)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2020-12-22 18:12:07.752 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-12-22 18:12:13.628
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-12-22 18:12:13.628
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7809b43a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@65da4a5d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-12-22 18:12:22.319
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\rouve'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2020-12-23 12:16:32.447 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-12-23 12:16:39.366
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-12-23 12:16:39.366
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@fbe8fd3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1ab268bd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-12-23 12:16:49.748
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\rouve'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.debug.ui 4 120 2020-12-23 12:46:33.231
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.FutureTask.awaitDone(FutureTask.java:418)
	at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:203)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.runInUIThreadWithTimeout(SelectedResourceManager.java:262)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getFromUI(SelectedResourceManager.java:240)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getActiveWindow(SelectedResourceManager.java:231)
	at org.eclipse.debug.ui.DebugUITools.getDebugContext(DebugUITools.java:247)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getFrame(JavaDebugHover.java:97)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:251)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.debug.ui 4 120 2020-12-23 12:46:36.303
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.FutureTask.awaitDone(FutureTask.java:418)
	at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:203)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.runInUIThreadWithTimeout(SelectedResourceManager.java:262)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getFromUI(SelectedResourceManager.java:240)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getActiveWindow(SelectedResourceManager.java:231)
	at org.eclipse.debug.ui.DebugUITools.getDebugContext(DebugUITools.java:247)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getFrame(JavaDebugHover.java:97)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:251)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.debug.ui 4 120 2020-12-23 12:57:21.564
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.FutureTask.awaitDone(FutureTask.java:418)
	at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:203)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.runInUIThreadWithTimeout(SelectedResourceManager.java:262)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getFromUI(SelectedResourceManager.java:240)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getActiveWindow(SelectedResourceManager.java:231)
	at org.eclipse.debug.ui.DebugUITools.getDebugContext(DebugUITools.java:247)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getFrame(JavaDebugHover.java:97)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:251)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2020-12-23 13:30:07.806 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-12-23 13:30:13.708
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-12-23 13:30:13.708
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7809b43a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@65da4a5d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-12-23 13:30:23.553
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\rouve'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2020-12-25 13:38:00.522 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-12-25 13:38:07.458
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-12-25 13:38:07.459
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@65da4a5d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@fbe8fd3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-12-25 13:38:17.995
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\rouve'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2020-12-25 15:20:52.827 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-12-25 15:20:58.748
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-12-25 15:20:58.748
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2fafa7b5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@181098bf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-12-25 15:21:07.210
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\rouve'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2020-12-25 15:37:41.596 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-12-25 15:37:47.474
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-12-25 15:37:47.474
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@16944b58,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1dbc607d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-12-25 15:37:57.506
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\rouve'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2020-12-25 18:29:39.753 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-12-25 18:29:50.043
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-12-25 18:29:50.044
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@fbe8fd3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1ab268bd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-12-25 18:30:04.443
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\rouve'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2020-12-26 08:38:02.149 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-12-26 08:38:09.022
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-12-26 08:38:09.022
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6a552721,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3815a7d1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-12-26 08:38:19.442
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\rouve'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2020-12-27 16:58:09.526 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-12-27 16:58:18.019
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-12-27 16:58:18.019
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@65da4a5d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@fbe8fd3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-12-27 16:58:30.272
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\rouve'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.debug.ui 4 120 2020-12-27 17:25:06.808
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.FutureTask.awaitDone(FutureTask.java:418)
	at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:203)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.runInUIThreadWithTimeout(SelectedResourceManager.java:262)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getFromUI(SelectedResourceManager.java:240)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getActiveWindow(SelectedResourceManager.java:231)
	at org.eclipse.debug.ui.DebugUITools.getDebugContext(DebugUITools.java:247)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getFrame(JavaDebugHover.java:97)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:251)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2020-12-28 09:25:08.049 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.java.product C:\Users\rouve\AppData\Roaming\Modinstaller\Backup\mods\Galacticraft-Planets-1.7-3.0.12.490.jar
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product C:\Users\rouve\AppData\Roaming\Modinstaller\Backup\mods\Galacticraft-Planets-1.7-3.0.12.490.jar

!ENTRY org.eclipse.jface 2 0 2020-12-28 09:25:16.062
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-12-28 09:25:16.062
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@40b54762,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@362cf66,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-12-28 09:25:29.028
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\rouve'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2020-12-28 17:23:07.840 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-12-28 17:23:14.284
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-12-28 17:23:14.284
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@62b42406,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@a0e33db,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-12-28 17:23:23.748
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\rouve'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2020-12-29 14:38:46.929 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-12-29 14:38:53.177
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-12-29 14:38:53.177
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@fbe8fd3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1ab268bd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-12-29 14:39:02.047
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\rouve'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-01-09 16:49:40.685 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-01-09 16:49:47.545
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-01-09 16:49:47.545
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@40b54762,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@362cf66,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-01-09 16:49:58.260
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\rouve'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-01-10 17:34:57.700 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-01-10 17:35:04.350
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-01-10 17:35:04.350
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1ab268bd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2fafa7b5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-01-10 17:35:14.686
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\rouve'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-01-10 17:56:56.229 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-01-10 17:57:02.309
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-01-10 17:57:02.309
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@16944b58,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1dbc607d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-01-10 17:57:12.606
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\rouve'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-01-10 18:18:46.708 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-01-10 18:18:52.974
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-01-10 18:18:52.974
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@65da4a5d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@fbe8fd3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-01-10 18:19:03.347
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\rouve'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-01-11 09:33:04.120 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-01-11 09:33:12.076
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-01-11 09:33:12.076
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1ab268bd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2fafa7b5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-01-11 09:33:28.132
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\rouve'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
