!SESSION 2020-12-22 16:59:04.862 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

This is a continuation of log file D:\Meine Programme\.metadata\.bak_1.log
Created Time: 2020-12-22 17:58:40.564

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:58:40.564
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:58:40.570
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:58:40.571
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:58:40.571
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:05.532
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:59:05.533
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:59:05.533
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:06.063
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:59:06.063
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:59:06.064
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:06.070
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui 4 0 2020-12-22 17:59:06.071
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:08.092
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:59:08.093
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:59:08.093
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:08.257
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:59:08.258
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:59:08.258
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:10.044
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:59:10.045
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:59:10.045
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:11.403
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:59:11.404
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:59:11.404
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:11.411
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui 4 0 2020-12-22 17:59:11.412
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:15.237
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:59:15.238
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:59:15.238
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:15.244
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui 4 0 2020-12-22 17:59:15.245
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:18.188
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:59:18.189
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:59:18.189
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:18.195
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui 4 0 2020-12-22 17:59:18.196
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:23.008
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:59:23.009
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:59:23.009
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:23.147
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:59:23.148
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:59:23.149
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:33.437
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:59:33.438
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:59:33.439
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:33.449
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui 4 0 2020-12-22 17:59:33.450
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:43.517
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:59:43.518
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:59:43.518
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:44.615
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    	double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:59:44.616
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:59:44.616
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:44.766
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    	double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:59:44.767
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:59:44.767
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:47.236
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    	double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:59:47.237
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:59:47.237
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:48.082
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    	double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:59:48.083
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:59:48.084
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:48.174
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    	double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:59:48.175
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:59:48.175
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:49.122
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:59:49.123
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:59:49.124
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:49.130
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:59:49.131
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:59:49.132
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:50.428
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:59:50.429
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:59:50.430
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:50.443
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:59:50.444
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:59:50.444
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:59:59.148
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:59:59.149
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:59:59.150
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:00:01.584
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:00:01.585
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:00:01.586
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:00:15.357
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:00:15.358
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:00:15.358
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:00:15.385
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.ui 4 0 2020-12-22 18:00:15.386
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1036)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:00:15.395
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:00:15.397
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:00:15.397
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:00:16.667
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3){
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 18:00:16.668
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 18:00:16.669
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:00:16.677
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3){
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:00:16.679
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:00:16.679
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:00:19.177
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 18:00:19.179
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 18:00:19.179
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:00:19.186
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:00:19.188
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:00:19.188
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:00:21.112
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:00:21.113
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:00:21.113
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:00:21.124
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:00:21.125
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:00:21.125
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:00:21.235
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:00:21.236
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:00:21.237
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:00:29.549
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:00:29.550
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:00:29.550
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:00:29.626
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:00:29.627
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:00:29.627
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:00:31.195
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren >= 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 18:00:31.196
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 18:00:31.196
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:00:31.293
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren >= 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 18:00:31.294
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 18:00:31.295
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 18:00:32.739
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		double radio = 0;						//Radio vorhanden: 1
		double radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double klimaanlage = 0;				//Klimaanlage vorhanden: 1
		double klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		double klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		double klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		double bordpc = 0;						//Bordcomputer vorhanden: 1
    	double bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	double bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	double bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	double interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	double wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	double zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	double weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	double extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	double grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	double aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	double preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren >= 3) {
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent == 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    double gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1461)
