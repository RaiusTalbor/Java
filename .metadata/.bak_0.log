!SESSION 2020-12-22 16:59:04.862 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=de_DE
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

This is a continuation of log file D:\Meine Programme\.metadata\.bak_9.log
Created Time: 2020-12-22 17:57:36.192

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:57:36.192
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:57:36.193
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:37.211
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		int sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		int anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			int fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			int sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			int weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		int esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:57:37.211
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:57:37.212
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:37.225
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		int sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		int anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			int fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			int sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			int weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		int esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:57:37.226
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:57:37.226
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:38.719
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		int anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			int fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			int sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			int weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		int esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:57:38.720
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:57:38.721
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:39.730
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			int fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			int sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			int weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		int esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:57:39.731
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:57:39.731
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:39.762
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			int fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			int sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			int weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		int esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:57:39.763
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:57:39.764
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:41.739
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
		double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			int sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			int weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		int esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:57:41.740
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:57:41.740
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:41.750
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
		double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			int sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			int weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		int esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:57:41.751
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:57:41.751
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:42.747
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
		double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
		double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			int weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		int esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:57:42.747
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:57:42.748
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:42.865
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
		double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
		double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			int weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		int esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:57:42.866
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:57:42.867
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:43.562
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
		double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
		double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			int weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		int esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:57:43.563
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:57:43.563
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:43.638
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
		double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
		double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			int weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		int esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:57:43.639
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:57:43.639
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:44.755
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
		double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			int weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		int esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:57:44.756
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:57:44.756
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:44.763
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
		double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			int weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		int esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:57:44.763
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:57:44.764
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:46.584
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
		double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			int weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		int esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:57:46.585
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:57:46.585
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:47.263
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			int weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		int esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:57:47.264
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:57:47.264
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:47.290
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			int weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		int esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:57:47.291
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:57:47.292
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:49.775
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		int esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:57:49.776
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:57:49.776
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:49.784
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		int esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:57:49.785
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:57:49.786
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:50.084
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		int esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:57:50.085
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:57:50.085
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:52.784
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
			double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:57:52.785
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:57:52.785
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:52.847
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
			double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:57:52.848
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:57:52.848
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:53.355
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
			double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:57:53.356
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:57:53.357
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:54.363
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
			double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:57:54.364
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:57:54.364
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:54.454
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
			double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:57:54.455
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:57:54.455
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:55.294
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:57:55.295
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:57:55.295
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:55.331
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:57:55.332
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:57:55.332
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:57.805
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:57:57.805
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:57:57.806
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:57.813
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:57:57.814
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:57:57.814
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:57.821
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:57:57.822
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:57:57.823
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:58.815
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:57:58.816
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:57:58.816
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:57:58.960
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		int allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:57:58.961
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:57:58.961
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:58:00.326
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:58:00.327
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:58:00.327
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:58:00.334
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		int alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:58:00.335
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:58:00.335
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:58:01.836
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		int co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:58:01.837
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:58:01.838
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:58:02.844
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:58:02.845
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:58:02.845
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:58:02.851
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:58:02.852
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:58:02.853
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:58:02.964
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:58:02.965
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:58:02.965
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:58:03.661
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		int schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:58:03.662
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:58:03.662
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:58:04.851
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:58:04.852
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:58:04.852
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:58:04.894
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		int bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-12-22 17:58:04.895
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-12-22 17:58:04.895
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:58:06.859
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		int übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		int gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:58:06.860
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:58:06.860
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:58:08.368
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:58:08.370
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:58:08.371
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:58:09.877
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		int übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:58:09.878
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:58:09.878
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:58:10.886
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		int einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-12-22 17:58:10.887
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-12-22 17:58:10.888
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-12-22 17:58:11.895
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------

public class Program {

	public static void main(String[] args) {

//Bitte tragen Sie in den vorgesehenen Stellen die verlangten Werte ein.
		
		String fahrzeugart = "Auto" ;  //Bitte entscheiden Sie NICHT zwischen "Auto", "Bus" oder "LKW"

//System:
		double höchstgeschwindigkeit = 0 ; 	//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double beschleunigung = 0 ; 			//Enttäuschend: 1; nicht mehr erwartet: 2; gut: 3
		double reichweiteVerbrenner = 0 ;    	//schlechter als 900km: 1; gegen 900km: 2; mehr als 900km: 3
		double reichweiteAlternativ= 0 ;     	//kein: 0; schlechter als 600km: 1; gegen 600km: 2; mehr als 600km: 3
		double anzahldieselmotoren = 0 ;     	//Anzahl der Motorenauswahlmöglichkeiten für Dieselmotoren
		double anzahlbenzinmotoren = 0 ;		
		double anzahlalternativsysteme = 0 ; 	//kein Hybrid!
		double sportmotor = 0 ;       			//kein Sportmotor im Angebot: 0; enttäsuchend schlecht/schwach: 1; nicht mehr erwartet: 2; gut: 3
		double anzahlsportmotoren = 0;			//Anzahl der Motorenmöglichkeiten
		//int keinautomotor = 0 ;  			//nur bei LKW oder Bus! Anzahl Motorenauswahlmöglichkeiten
		//Getriebeauswahl Auto
			double fünfgang = 0 ;				//Anzahl der 5+R1 - Getriebe (Automatik und Manuell)
			double sechsgang = 0 ;				//Anzahl der 6+R1 - Getriebe (a/m)
			double weiteregetriebe = 0 ;		//Anzahl aller weiteren möglichen Getriebearten
			//int keinautogetriebe = 0 ; 		//nur bei LKW oder Bus! Anzahl möglichen Getriebe
		double esp = 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double abs	= 0 ;						//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double assistent = 0;					//abschaltbaren, sinnvollen und gut umgesetzten Assistenten: wenn ja: 1
		double allrad = 0 ;					//wenn vorhanden: 1; wenn zu/abschaltbar: 2
		double alternativantriebsauswahl = 0;	//wenn kein Alternativ: 0; wenn Alternativsysteme: Anzahl; wenn als Alternativsystem konstruiert: 99;
		double co2ausstoß = 0;  				//k.A.: 0; bei LKW/Bus: 1; wenn >= 180g/100km: 2; wenn keine: 3
		double schadstoffnorm = 0; 			//< Euro5: 1;mind. Euro5: 2;mind. Euro6: 3;mind. Euro6b: 4;mind. Euro6c: 5;mind. Euro6d: 6; Alternativ: 7
		
		
//Innenraum/Interieur:
		double bedienung = 0; 					//schlecht: 1; geht so: 2; gut: 3
		double übersicht = 0;					//schlecht: 1; geht so: 2; gut: 3
		double gestaltung = 0; 				//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double gestaltunganzeigentacho = 0;	//unpassend: 1; nicht wirklich überragend: 2; gut: 3
		double übersichtanzeigentacho = 0;		//schlecht: 1; geht so: 2; gut: 3
		double einteilunganzeigentacho = 0;	//sind die Anzeigen sinnvoll angeordnet? schlecht: 1; geht so: 2; gut: 3
		
		int radio = 0;						//Radio vorhanden: 1
		int radioposition = 0; 				//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int radiobedienung = 0;				//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int radioübersicht = 0;				//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
		int klimaanlage = 0;				//Klimaanlage vorhanden: 1
		int klimaanlageposition = 0; 		//schlechte Position: 1; könnte besser sein: 2; gut: 3
		int klimaanlagebedienung = 0;		//schlechte Bedienung: 1; könnte besser sein: 2; gut 3
		int klimaanlageübersicht = 0;		//schlechte Übersicht: 1; könnte besser sein: 2, gut 3
		
    	int bordpc = 0;						//Bordcomputer vorhanden: 1
    	int bordpcbedienung = 0;			//schlecht: 1; geht so: 2; gut: 3
    	int bordpcübersicht = 0;			//schlecht: 1; geht so: 2; gut: 3 (Gestaltung mit einbezogen)
    	int bordpcfunktionen = 0;			//zu wenig: 1; zu viele: 2; sinnvolle/genügend: 3
    	
//weitere Ausstattung:
    	int interiuermöglichkeiten = 0; 	//nein/zu wenig: 1; ja: 2
    	int wechselmöglichkeiten = 0;		//nein/zu wenig: 1; ja: 2 (kann man andere Farben/Lenkräder/Zierelemente wählen?)
    	int zusatz = 0;						//nein/zu wenig: 1; ja: 2 (gibt es Zusatzzierelemente z. B. Beschriftungen?)
    	int weiteres = 0; 					//nein/zu wenig: 1; ja: 2 (gibt es sonstiges?)
    	int extraversion = 0;				//nein/zu wenig: 1; ja: 2 (gibt es Extraversionen/Modellpakete wie Sport-/Gelände mit entsprechenden Extras?)
    	
//Preis
    	int grundpreis = 0;					//zu teuer/zu billig: 1; gut: 2
    	int aufpreise = 0;					//zu teuer/zu billig: 1; gut: 2
    	int preisleistungsverhältnis = 0; 	//zu teuer/zu billig: 1; gut: 2

    	
//Programm:
    	
    	if(höchstgeschwindigkeit == 1) {
    		höchstgeschwindigkeit = 0 ;
    	}
    	if(höchstgeschwindigkeit == 2) {
    		höchstgeschwindigkeit = 0.5 ;
    	}
    	if(höchstgeschwindigkeit == 3) {
    		höchstgeschwindigkeit = 1 ;
    	}
	
    	if(beschleunigung == 1) {
    		beschleunigung = 0;
    	}
    	if(beschleunigung == 2) {
    		beschleunigung = 0.5;
    	}
    	if(beschleunigung == 3) {
    		beschleunigung = 1;
    	}
    	
    	if(reichweiteVerbrenner == 1) {
    		reichweiteVerbrenner = 0;
    	}
    	if(reichweiteVerbrenner == 2) {
    		reichweiteVerbrenner = 1;
    	}
    	if(reichweiteVerbrenner == 3) {
    		reichweiteVerbrenner = 2;
    	}
    	
    	if(reichweiteAlternativ == 1) {
    		reichweiteAlternativ = 1;
    	}
    	if(reichweiteAlternativ == 2) {
    		reichweiteAlternativ = 2;
    	}
    	if(reichweiteAlternativ == 3) {
    		reichweiteAlternativ = 3;
    	}
    	
    	if(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 1;
    	}
    	else(anzahldieselmotoren > 3{
    		anzahldieselmotoren = anzahldieselmotoren + 0;
    	}
    	
    	if(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 1;
    	}
    	else(anzahlbenzinmotoren > 3{
    		anzahlbenzinmotoren = anzahlbenzinmotoren + 0;
    	}
    	
    	if(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * + 2;
    	}
    	else(anzahlalternativsysteme > 3{
    		anzahlalternativsysteme = anzahlalternativsysteme * 2 + 0;
    	}
    	
    	if(anzahldieselmotoren >= 12) {
    		anzahldieselmotoren = 12;
    	}
    	if(anzahlbenzinmotoren >= 12) {
    		anzahlbenzinmotoren = 12;
    	}
    	if(anzahlalternativsysteme >= 12) {
    		anzahlalternativsysteme = 12;
    	}
    	
    	if(sportmotor == 0) {
    		sportmotor = 0;
    	}
    	if(sportmotor == 1) {
    		sportmotor = 1;
    	}
    	if(sportmotor == 2) {
    		sportmotor = 2;
    	}
    	if(sportmotor == 3) {
    		sportmotor = 3;
    	}
    	sportmotor = sportmotor + anzahlsportmotoren;
    	if(sportmotor >= 5) {
    		sportmotor = 5;
    	}
    	
    	//keinautomotor?
    	
    	fünfgang = fünfgang / 2;
    	sechsgang = sechsgang /2
    	if(weiteregetriebe >= 8) {
    		weiteregetriebe =8;
    	}
    	//keinautogetriebe
    	
    	if(esp == 1) {
    		esp = 0.5;
    	}
    	if(esp == 2) {
    		esp = 1;
    	}
    	
    	if(abs == 1) {
    		abs = 0.5;
    	}
    	if(abs == 2) {
    		abs = 1;
    	}
    	
    	if(assistent = 1) {
    	assistent = assistent + 1;
    	}
    	
    	if(allrad == 1) {
    		allrad = 1;
    	}
    	if(allrad == 2) {
    		allrad = 2;
    	}
    	
    	if(alternativantriebsauswahl == 0) {
    		alternativantriebsauswahl = 0;
    	}
    	if(alternativantriebsauswahl >= 5) {
    		alternativantriebsauswahl = 5;
    	}
    	if(alternativantriebsauswahl == 99) {
    		alternativantriebsauswahl = 7;
    	}
    	
    	if(co2ausstoß == 0) {
    		co2ausstoß = 0;
    	}
    	if(co2ausstoß == 1) {
    		co2ausstoß = 1;
    	}
    	if(co2ausstoß == 2) {
    		co2ausstoß = 2;
    	}
    	if(co2ausstoß == 3) {
    		co2ausstoß = 3;
    	}
    	
    	if(schadstoffnorm == 1) {
    		schadstoffnorm = 0;
    	}
    	if(schadstoffnorm == 2) {
    		schadstoffnorm = 1;
    	}
    	if(schadstoffnorm == 3) {
    		schadstoffnorm = 2;
    	}
    	if(schadstoffnorm == 4) {
    		schadstoffnorm = 3;
    	}
    	if(schadstoffnorm == 5) {
    		schadstoffnorm = 4;
    	}
    	if(schadstoffnorm == 6) {
    		schadstoffnorm = 5;
    	}
    	if(schadstoffnorm == 7) {
    		schadstoffnorm = 6;
    	}
    	
    	if(bedienung == 1) {
    		bedienung = 0;
    	}
    	if(bedienung == 2) {
    		bedienung = 1;
    	}
    	if(bedienung == 3) {
    		bedienung = 2;
    	}
    	
    	if(übersicht == 1) {
    		übersicht = 0;
    	}
    	if(übersicht == 2) {
    		übersicht = 1;
    	}
    	if(übersicht == 3) {
    		übersicht = 2;
    	}
    	
    	if(gestaltung == 1) {
    		gestaltung = 0;
    	}
    	if(gestaltung == 2) {
    		gestaltung = 1;
    	}
    	if(gestaltung == 3) {
    		gestaltung = 2;
    	}
    	
    	if(gestaltunganzeigentacho == 1) {
    		gestaltunganzeigentacho = 0;
    	}
    	if(gestaltunganzeigentacho == 2) {
    		gestaltunganzeigentacho = 1;
    	}
    	if(gestaltunganzeigentacho == 3) {
    		gestaltunganzeigentacho = 2;
    	}
    	
    	if(übersichtanzeigentacho == 1) {
    		übersichtanzeigentacho = 0;
    	}
    	if(übersichtanzeigentacho == 2) {
    		übersichtanzeigentacho = 1;
    	}
    	if(übersichtanzeigentacho == 3) {
    		übersichtanzeigentacho = 2;
    	}
    	
    	if(einteilunganzeigentacho == 1) {
    		einteilunganzeigentacho = 0;
    	}
    	if(einteilunganzeigentacho == 2) {
    		einteilunganzeigentacho = 1;
    	}
    	if(einteilunganzeigentacho == 3) {
    		einteilunganzeigentacho = 2;
    	}
    	
    	if(radio == 1) {
    		radio = 0.5;
    	}
    	
    	if(radioposition == 1) {
    		radioposition = 0;
    	}
    	if(radioposition == 2) {
    		radioposition = 1;
    	}
    	if(radioposition == 3) {
    		radioposition = 2;
    	}
    	
    	if(radiobedienung == 1) {
    		radiobedienung = 0;
    	}
    	if(radiobedienung == 2) {
    		radiobedienung = 1;
    	}
    	if(radiobedienung == 3) {
    		radiobedienung = 2;
    	}

    	if(radioübersicht == 1) {
    		radioübersicht = 0;
    	}
    	if(radioübersicht == 2) {
    		radioübersicht = 1;
    	}
    	if(radioübersicht == 3) {
    		radioübersicht = 2;
    	}
    	
    	if(klimaanlage == 1) {
    		klimaanlage = 1;
    	}
    	
    	if(klimaanlageposition == 1) {
    		klimaanlageposition = 0;
    	}
    	if(klimaanlageposition == 2) {
    		klimaanlageposition = 1;
    	}
    	if(klimaanlageposition == 3) {
    		klimaanlageposition = 2;
    	}
    	
    	if(klimaanlagebedienung == 1) {
    		klimaanlagebedienung = 0;
    	}
    	if(klimaanlagebedienung == 2) {
    		klimaanlagebedienung = 1;
    	}
    	if(klimaanlagebedienung == 3) {
    		klimaanlagebedienung = 2;
    	}

    	if(klimaanlageübersicht == 1) {
    		klimaanlageübersicht = 0;
    	}
    	if(klimaanlageübersicht == 2) {
    		klimaanlageübersicht = 1;
    	}
    	if(klimaanlageübersicht == 3) {
    		klimaanlageübersicht = 2;
    	}
    	
    	if(bordpc == 1) {
    		bordpc = 0.5;
    	}
    	
    	if(bordpcbedienung == 1) {
    		bordpcbedienung = 0;
    	}
    	if(bordpcbedienung == 2) {
    		bordpcbedienung = 0.5;
    	}
    	if(bordpcbedienung == 3) {
    		bordpcbedienung = 1;
    	}
    	
    	if(bordpcübersicht == 1) {
    		bordpcübersicht = 0;
    	}
    	if(bordpcübersicht == 2) {
    		bordpcübersicht = 0.5;
    	}
    	if(bordpcübersicht == 3) {
    		bordpcübersicht = 1;
    	}

    	if(bordpcfunktionen == 1) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 2) {
    		bordpcfunktionen = 0;
    	}
    	if(bordpcfunktionen == 3) {
    		bordpcfunktionen = 0.5;
    	}
    	
    	if(interiuermöglichkeiten == 1) {
    		interiuermöglichkeiten = 0;
    	}
    	if(interiuermöglichkeiten == 2) {
    		interiuermöglichkeiten = 2;
    	}
    	
    	if(wechselmöglichkeiten == 1) {
    		wechselmöglichkeiten = 0;
    	}
    	if(wechselmöglichkeiten == 2) {
    		wechselmöglichkeiten = 2;
    	}
    	
    	if(zusatz == 1) {
    		zusatz = 0;
    	}
    	if(zusatz == 2) {
    		zusatz = 1;
    	}
    	
    	if(weiteres == 1) {
    		weiteres = 0;
    	}
    	if(weiteres == 2) {
    		weiteres = 1;
    	}
    	
    	if(extraversion == 1) {
    		extraversion = 0;
    	}
    	if(extraversion == 2) {
    		extraversion = 2;
    	}
    	
    	if(grundpreis == 1) {
    		grundpreis = 0;
    	}
    	if(grundpreis == 2) {
    		grundpreis = 2;
    	}
    	
    	if(aufpreise == 1) {
    		aufpreise = 0;
    	}
    	if(aufpreise == 2) {
    		aufpreise = 2;
    	}
    	
    	if(preisleistungsverhältnis == 1) {
    		preisleistungsverhältnis = 0;
    	}
    	if(preisleistungsverhältnis == 2) {
    		preisleistungsverhältnis = 3;
    	}
    	
    int gesamt = höchstgeschwindigkeit + beschleunigung + reichweiteVerbrenner + reichweiteAlternativ + anzahldieselmotoren + anzahlbenzinmotoren + anzahlalternativsysteme + sportmotor+ fünfgang + sechsgang + weiteregetriebe + esp + abs + assistent + allrad + alternativantriebsauswahl + co2ausstoß + schadstoffnorm + bedienung + übersicht + gestaltung + gestaltunganzeigentacho + übersichtanzeigentacho + einteilunganzeigentacho + radio + radioposition + radiobedienung + radioübersicht + klimaanlage + klimaanlageposition + klimaanlagebedienung + klimaanlageübersicht + bordpc + bordpcbedienung + bordpcübersicht + bordpcfunktionen + interiuermöglichkeiten + wechselmöglichkeiten + zusatz + weiteres + extraversion + grundpreis + aufpreise + preisleistungsverhältnis ;

    if(gesamt > 85) {
    	System.out.println("Note: 1" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 74) {
    	System.out.println("Note: 2" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 55) {
    	System.out.println("Note: 3" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 35) {
    	System.out.println("Note: 4" + " Punkte: " + gesamt);
    	
    }
    if(gesamt > 15) {
    	System.out.println("Note: 5" + " Punkte: " + gesamt);
    	
    }
    if(gesamt < 15) {
    	System.out.println("Note: 6" + "; Punkte: " + gesamt);
    	
    }
    
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)
